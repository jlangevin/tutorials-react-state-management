{"version":3,"sources":["components/PropsExample/AuthorBlock.module.css","components/ContextExample/AuthorBlock.module.css","components/ReduxExample/AuthorBlock.module.css","components/PropsExample/LikeBar.module.css","components/ContextExample/LikeBar.module.css","components/ReduxExample/LikeBar.module.css","components/PropsExample/FeedItem.module.css","components/ContextExample/FeedItem.module.css","components/ReduxExample/FeedItem.module.css","components/Header/Header.module.css","components/PropsExample/PropsExample.module.css","components/ContextExample/ContextExample.module.css","components/ReduxExample/Page.module.css","components/Header/Header.js","components/PropsExample/AuthorBlock.js","components/PropsExample/LikeBar.js","components/PropsExample/FeedItem.js","components/PropsExample/Feed.js","components/PropsExample/PropsExample.js","components/ContextExample/context/feed.js","components/ContextExample/AuthorBlock.js","components/ContextExample/LikeBar.js","components/ContextExample/FeedItem.js","components/ContextExample/Feed.js","components/ContextExample/ContextExample.js","components/ReduxExample/modules/author.js","components/ReduxExample/modules/feed.js","components/ReduxExample/modules/user.js","components/ReduxExample/modules/index.js","components/ReduxExample/store/index.js","components/ReduxExample/AuthorBlock.js","components/ReduxExample/LikeBar.js","components/ReduxExample/FeedItem.js","components/ReduxExample/Feed.js","components/ReduxExample/Page.js","components/ReduxExample/ReduxExample.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AuthorBlock","AuthorImage","AuthorInfo","LikeBar","LikeButton","LikedBy","FeedItem","Header","Page","react_default","a","createElement","className","classes","Link","to","Component","props","name","email","onClick","toggleLike","feedItemId","likes","indexOf","userId","map","authorId","key","authors","PropsExample_AuthorBlock","content","PropsExample_LikeBar","id","Feed","Object","keys","feedItems","feedItem","PropsExample_FeedItem","assign","PropsExample","state","user","b","c","1","2","_this","newFeedItems","objectSpread","newFeedItem","newLikes","toConsumableArray","index","splice","push","setState","this","PropsExample_Feed","FeedContext","React","createContext","FeedContextProvider","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","value","children","Provider","feed","_ref","Consumer","_ref2","ContextExample_AuthorBlock","ContextExample_LikeBar","ContextExample_FeedItem","ContextExample","feed_FeedContextProvider","context","ContextExample_Feed","INITIAL_STATE","combineReducers","arguments","length","undefined","type","action","_action$payload","payload","newFeed","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","reduxThunk","connect","author","mapDispatchToProps","dispatch","ReduxExample_AuthorBlock","ReduxExample_LikeBar","ReduxExample_FeedItem","ReduxExample_Feed","ReduxExample","es","store","ReduxExample_Page","App","components_Header_Header","Switch","Route","path","component","Props","Context","Redux","Boolean","location","hostname","match","ReactDOM","render","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c62686fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthorBlock\":\"AuthorBlock_AuthorBlock__2fMHs\",\"AuthorImage\":\"AuthorBlock_AuthorImage__3jMG4\",\"AuthorInfo\":\"AuthorBlock_AuthorInfo__2RDn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthorBlock\":\"AuthorBlock_AuthorBlock__3i2Uc\",\"AuthorImage\":\"AuthorBlock_AuthorImage__3QIkX\",\"AuthorInfo\":\"AuthorBlock_AuthorInfo__D455u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthorBlock\":\"AuthorBlock_AuthorBlock__TvuTp\",\"AuthorImage\":\"AuthorBlock_AuthorImage__2vBAv\",\"AuthorInfo\":\"AuthorBlock_AuthorInfo__14J2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LikeBar\":\"LikeBar_LikeBar__HUheU\",\"LikeButton\":\"LikeBar_LikeButton__3zrLo\",\"LikedBy\":\"LikeBar_LikedBy__1b0g3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LikeBar\":\"LikeBar_LikeBar__PZS7T\",\"LikeButton\":\"LikeBar_LikeButton__gG_64\",\"LikedBy\":\"LikeBar_LikedBy__pWEFF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LikeBar\":\"LikeBar_LikeBar__3bcMJ\",\"LikeButton\":\"LikeBar_LikeButton__3bwov\",\"LikedBy\":\"LikeBar_LikedBy__f4UGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedItem\":\"FeedItem_FeedItem__ujdKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedItem\":\"FeedItem_FeedItem__1wSMC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedItem\":\"FeedItem_FeedItem__2SUMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2B0vx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"PropsExample_Page__1TdyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"ContextExample_Page__3VVqC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"Page_Page__2V1l0\"};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport * as classes from './Header.module.css';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <ul className={classes.Header}>\n          <li><Link to=\"/props\">Props</Link></li>\n          <li><Link to=\"/context\">Context</Link></li>\n          <li><Link to=\"/redux\">Redux</Link></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport * as classes from './AuthorBlock.module.css';\n\nconst AuthorBlock = (props) => {\n  return (\n    <div className={classes.AuthorBlock}>\n      <div className={classes.AuthorImage}></div>\n      <div className={classes.AuthorInfo}>\n        <div className={classes.AuthorName}>{ props.name }</div>\n        <div className={classes.AuthorEmail}>{ props.email }</div>\n      </div>\n    </div>\n  );\n}\n\nexport default AuthorBlock;","import React from 'react';\nimport * as classes from './LikeBar.module.css';\n\nconst LikeBar = (props) => {\n  return (\n    <div className={classes.LikeBar}>\n      <button className={classes.LikeButton} onClick={() => props.toggleLike(props.feedItemId)}>\n        { props.likes.indexOf(props.userId) > -1 ? 'Unlike' : 'Like' }\n      </button>\n      <div className={classes.LikedBy}>\n        <div>Liked by:</div>\n        {props.likes.map(authorId => (\n          <div key={authorId}>{props.authors[authorId].name}</div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default LikeBar;","import React from 'react';\nimport AuthorBlock from './AuthorBlock';\nimport LikeBar from './LikeBar';\nimport * as classes from './FeedItem.module.css';\n\nconst FeedItem = (props) => {\n  return (\n    <div className={classes.FeedItem}>\n      <AuthorBlock\n        {...props.authors[props.authorId]}\n      />\n      <div className={classes.FeedContent}>\n        {props.content}\n      </div>\n      <LikeBar\n        authors={props.authors}\n        likes={props.likes}\n        userId={props.userId}\n        feedItemId={props.id}\n        toggleLike={props.toggleLike}\n      />\n    </div>\n  );\n}\n\nexport default FeedItem;","import React from 'react';\nimport FeedItem from './FeedItem';\n\nconst Feed = (props) => {\n  return (\n    <div>\n      {Object.keys(props.feedItems).map(key => {\n        const feedItem = props.feedItems[key];\n        return (\n          <FeedItem\n            key={key}\n            {...feedItem}\n            authors={props.authors}\n            userId={props.userId}\n            toggleLike={props.toggleLike}\n          />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default Feed;","import React, { Component } from 'react';\nimport Feed from './Feed';\nimport * as classes from './PropsExample.module.css';\n\nclass PropsExample extends Component {\n  state = {\n    // Logged in user\n    user: {\n      id: 'c',\n      name: 'Stella',\n      email: 'stel@la.com'\n    },\n    // Normalized author info\n    authors: {\n      'a': {\n        id: 'a',\n        name: 'Marv',\n        email: 'mar@v.com'\n      },\n      'b': {\n        id: 'b',\n        name: 'Carol',\n        email: 'car@ol.com'\n      },\n      'c': {\n        id: 'c',\n        name: 'Stella',\n        email: 'stel@la.com'\n      }\n    },\n    feedItems: {\n      1: {\n        id: 1,\n        authorId: 'a',\n        content: `Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings.`,\n        likes: [\n          'a',\n          'c'\n        ]\n      },\n      2: {\n        id: 2,\n        authorId: 'b',\n        content: `Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content.`,\n        likes: []\n      }\n    }\n  };\n\n  toggleLike = (feedItemId) => {\n    let userId = this.state.user.id;\n    \n    // Create a new feed items object from state via destructuring\n    const newFeedItems = {\n      ...this.state.feedItems\n    };\n\n    // Create a new feed item object via destructuring\n    const newFeedItem = {\n      ...newFeedItems[feedItemId]\n    }\n    \n    // Create a new likes array for the feed item via destructuring\n    const newLikes = [\n      ...newFeedItem.likes\n    ];\n\n    // Add or remove our user id from the likes\n    const index = newFeedItem.likes.indexOf(userId);\n    if ( index > -1 ) {\n      newLikes.splice(index, 1);\n    } else {\n      newLikes.push(userId);\n    }\n   \n    // Update our new item with the new likes\n    newFeedItem.likes = newLikes;\n    // Update our new feed with our new feed item\n    newFeedItems[feedItemId] = newFeedItem;\n    // Lastly, update state\n    this.setState({feedItems: newFeedItems});\n  }\n\n  render() {\n    return (\n      <div className={classes.Page}>\n        <h1>Props Example</h1>\n        <div>Hello: {this.state.user.name}</div>\n        <Feed\n          feedItems={this.state.feedItems}\n          authors={this.state.authors}\n          userId={this.state.user.id}\n          toggleLike={this.toggleLike}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PropsExample;","\nimport React, { Component } from 'react';\n\nexport const FeedContext = React.createContext();\n\nexport class FeedContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Logged in user\n      user: {\n        id: 'c',\n        name: 'Stella',\n        email: 'stel@la.com'\n      },\n      // Normalized author info\n      authors: {\n        'a': {\n          id: 'a',\n          name: 'Marv',\n          email: 'mar@v.com'\n        },\n        'b': {\n          id: 'b',\n          name: 'Carol',\n          email: 'car@ol.com'\n        },\n        'c': {\n          id: 'c',\n          name: 'Stella',\n          email: 'stel@la.com'\n        }\n      },\n      feedItems: {\n        1: {\n          id: 1,\n          authorId: 'a',\n          content: `Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings.`,\n          likes: [\n            'a',\n            'c'\n          ]\n        },\n        2: {\n          id: 2,\n          authorId: 'b',\n          content: `Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content.`,\n          likes: []\n        }\n      }\n    };\n  }\n\n  toggleLike = (feedItemId) => {\n    let userId = this.state.user.id;\n    \n    // Create a new feed items object from state via destructuring\n    const newFeedItems = {\n      ...this.state.feedItems\n    };\n\n    // Create a new feed item object via destructuring\n    const newFeedItem = {\n      ...newFeedItems[feedItemId]\n    }\n    \n    // Create a new likes array for the feed item via destructuring\n    const newLikes = [\n      ...newFeedItem.likes\n    ];\n\n    // Add or remove our user id from the likes\n    const index = newFeedItem.likes.indexOf(userId);\n    if ( index > -1 ) {\n      newLikes.splice(index, 1);\n    } else {\n      newLikes.push(userId);\n    }\n   \n    // Update our new item with the new likes\n    newFeedItem.likes = newLikes;\n    // Update our new feed with our new feed item\n    newFeedItems[feedItemId] = newFeedItem;\n    // Lastly, update state\n    this.setState({feedItems: newFeedItems});\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <FeedContext.Provider\n        value={{\n          user: this.state.user,\n          authors: this.state.authors,\n          feed: this.state.feedItems,\n          toggleLike: this.toggleLike,\n        }}\n      >\n        {children}\n      </FeedContext.Provider>\n    );\n  }\n}\n","import React from 'react';\nimport { FeedContext } from './context/feed';\nimport * as classes from './AuthorBlock.module.css';\n\nconst AuthorBlock = ({ authorId }) => {\n  return (\n    <FeedContext.Consumer>\n      {({ authors }) => (\n        <div className={classes.AuthorBlock}>\n          <div className={classes.AuthorImage}></div>\n          <div className={classes.AuthorInfo}>\n            <div className={classes.AuthorName}>{ authors[authorId].name }</div>\n            <div className={classes.AuthorEmail}>{ authors[authorId].email }</div>\n          </div>\n        </div>\n      )}\n    </FeedContext.Consumer>\n  );\n}\n\nexport default AuthorBlock;","import React from 'react';\nimport { FeedContext } from './context/feed';\nimport * as classes from './LikeBar.module.css';\n\nconst LikeBar = ({ likes, feedItemId }) => {\n  return (\n    <FeedContext.Consumer>\n      {({ authors, toggleLike, user }) => (\n        <div className={classes.LikeBar}>\n          <button className={classes.LikeButton} onClick={() => toggleLike(feedItemId)}>\n            { likes.indexOf(user.id) > -1 ? 'Unlike' : 'Like' }\n          </button>\n          <div className={classes.LikedBy}>\n            <div>Liked by:</div>\n            {likes.map(authorId => (\n              <div key={authorId}>{authors[authorId].name}</div>\n              ))}\n          </div>\n        </div>\n      )}\n    </FeedContext.Consumer>\n  );\n}\n\nexport default LikeBar;","import React from 'react';\nimport { FeedContext } from './context/feed';\nimport AuthorBlock from './AuthorBlock';\nimport LikeBar from './LikeBar';\nimport * as classes from './FeedItem.module.css';\n\nconst FeedItem = ({feedItemId}) => {\n  return (\n    <FeedContext.Consumer>\n      {({ feed }) => {\n        const feedItem = feed[feedItemId];\n        return (\n          <div className={classes.FeedItem}>\n            <AuthorBlock\n              authorId={feedItem.authorId}\n            />\n            <div className={classes.FeedContent}>\n              {feedItem.content}\n            </div>\n            <LikeBar\n              likes={feedItem.likes}\n              feedItemId={feedItemId}\n            />\n          </div>\n        )\n      }}\n    </FeedContext.Consumer>\n  );\n}\n\nexport default FeedItem;","import React from 'react';\nimport { FeedContext } from './context/feed';\nimport FeedItem from './FeedItem';\n\nconst Feed = () => {\n  return (\n    <FeedContext.Consumer>\n      {({ feed }) => (\n        <div>\n          {Object.keys(feed).map(key => {\n            const feedItemId = feed[key].id;\n            return (\n              <FeedItem\n                key={key}\n                feedItemId={feedItemId}\n              />\n            )\n          })}\n        </div>\n      )}\n    </FeedContext.Consumer>\n  );\n}\n\nexport default Feed;","import React from 'react';\nimport { FeedContextProvider, FeedContext } from './context/feed';\nimport Feed from './Feed';\nimport * as classes from './ContextExample.module.css';\n\nconst ContextExample = () => {\n  return (\n    <FeedContextProvider>\n      <FeedContext.Consumer>\n        {( context ) => (\n          <div className={classes.Page}>\n            <h1>Context Example</h1>\n            <div>Hello: {context.user.name}</div>\n            <Feed />\n          </div>\n        )}\n      </FeedContext.Consumer>\n    </FeedContextProvider>\n  );\n}\n\nexport default ContextExample;\n","/**\n * Action Constants/Types\n */\n// None at this time\n// const SOME_AUTHOR_ACTION = 'SOME_AUTHOR_ACTION';\n\n// Configure initial state\nconst INITIAL_STATE = {\n  // Normalized author info\n  'a': {\n    id: 'a',\n    name: 'Marv',\n    email: 'mar@v.com'\n  },\n  'b': {\n    id: 'b',\n    name: 'Carol',\n    email: 'car@ol.com'\n  },\n  'c': {\n    id: 'c',\n    name: 'Stella',\n    email: 'stel@la.com'\n  }\n};\n\n/**\n * Actions\n */\n// None at this time\n// export doSomeAuthorAction = (arg1, arg2) => dispatch => {\n//   dispatch({\n//     type: SOME_AUTHOR_ACTION,\n//     payload: { arg1, arg2 }\n//   });\n// }\n\n/**\n * Reducer\n */\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    // If we had actions related to our authors, we'd add them here\n    // case SOME_AUTHOR_ACTION: {\n    //   ... logic to create a new state object ...\n    // }\n   \n    default: \n      return state;\n  }\n}\n","/**\n * Action Constants/Types\n */\nconst SET_LIKE = 'SET_LIKE';\n\n// Configure initial state\nconst INITIAL_STATE = {\n  1: {\n    id: 1,\n    authorId: 'a',\n    content: `Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings. Marv's marvelous musings.`,\n    likes: [\n      'a',\n      'c'\n    ]\n  },\n  2: {\n    id: 2,\n    authorId: 'b',\n    content: `Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content. Carol's cool content.`,\n    likes: []\n  }\n};\n\n/**\n * Actions\n */\nexport const toggleLike = (feedItemId, userId) => dispatch => {\n  dispatch({\n    type: SET_LIKE,\n    payload: { feedItemId, userId }\n  });\n}\n\n/**\n * Reducer\n */\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case SET_LIKE: {\n      const { feedItemId, userId } = action.payload;\n\n      // Create a new feed items object from state via destructuring\n      const newFeed = {\n        ...state\n      };\n\n      // Create a new feed item object via destructuring\n      const newFeedItem = {\n        ...newFeed[action.payload.feedItemId]\n      }\n      \n      // Create a new likes array for the feed item via destructuring\n      const newLikes = [\n        ...newFeedItem.likes\n      ];\n\n      // Add or remove our user id from the likes\n      const index = newFeedItem.likes.indexOf(userId);\n      if ( index > -1 ) {\n        newLikes.splice(index, 1);\n      } else {\n        newLikes.push(userId);\n      }\n      \n      // Update our new item with the new likes\n      newFeedItem.likes = newLikes;\n      // Update our new feed with our new feed item\n      newFeed[feedItemId] = newFeedItem;\n      // Lastly, update state by returning our new state object\n      return newFeed;\n    }\n   \n    default: \n      return state;\n  }\n}\n","/**\n * Action Constants/Types\n */\n// None at this time\n// const SOME_USER_ACTION = 'SOME_USER_ACTION';\n\n// Configure initial state\nconst INITIAL_STATE = {\n  // Logged in user\n  id: 'c',\n  name: 'Stella',\n  email: 'stel@la.com'\n};\n\n/**\n * Actions\n */\n// None at this time\n// export doSomeUserAction = (arg1, arg2) => dispatch => {\n//   dispatch({\n//     type: SOME_USER_ACTION,\n//     payload: { arg1, arg2 }\n//   });\n// }\n\n/**\n * Reducer\n */\nexport const reducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    // If we had actions related to our user, we'd add them here\n    // case SOME_USER_ACTION: {\n    //   ... logic to create a new state object ...\n    // }\n   \n    default: \n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as authorReducer } from './author';\nimport { reducer as feedReducer } from './feed';\nimport { reducer as userReducer } from './user';\n\nexport default combineReducers({\n\tauthors: authorReducer,\n\tfeed: feedReducer,\n\tuser: userReducer,\n});","import { createStore, applyMiddleware, compose } from 'redux';\n// Redux thunk allows us to dispatch actions and receive a promise instead of an object\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from '../modules';\n\n// Config for redux dev tools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore( \n\treducers, \n\t// Second parameter is an \"enhancer\".  Middlewares can be passed as a comma list\n\tcomposeEnhancers( applyMiddleware( reduxThunk ) ) // Invoke middleware as it's passed in\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as classes from './AuthorBlock.module.css';\n\nconst AuthorBlock = ({authorId, authors}) => {\n  let author = authors[authorId];\n  return (\n    <div className={classes.AuthorBlock}>\n      <div className={classes.AuthorImage}></div>\n      <div className={classes.AuthorInfo}>\n        <div className={classes.AuthorName}>{ author.name }</div>\n        <div className={classes.AuthorEmail}>{ author.email }</div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  authors: state.authors\n});\n\nexport default connect(mapStateToProps, null)(AuthorBlock);","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as classes from './LikeBar.module.css';\nimport { toggleLike } from './modules/feed';\n\nconst LikeBar = ({ authors, feedItemId, likes, toggleLike, userId }) => {\n  return (\n    <div className={classes.LikeBar}>\n      <button className={classes.LikeButton} onClick={() => toggleLike(feedItemId, userId)}>\n        { likes.indexOf(userId) > -1 ? 'Unlike' : 'Like' }\n      </button>\n      <div className={classes.LikedBy}>\n        <div>Liked by:</div>\n        {likes.map(authorId => (\n          <div key={authorId}>{authors[authorId].name}</div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  authors: state.authors,\n  userId: state.user.id\n});\n\nconst mapDispatchToProps = {\n  toggleLike\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeBar);","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as classes from './FeedItem.module.css';\nimport AuthorBlock from './AuthorBlock';\nimport LikeBar from './LikeBar';\n\nconst FeedItem = (props) => {\n  let feedItem = props.feed[props.id];\n  return (\n    <div className={classes.FeedItem}>\n      <AuthorBlock\n        authorId={feedItem.authorId}\n      />\n      <div className={classes.FeedContent}>\n        {feedItem.content}\n      </div>\n      <LikeBar\n        likes={feedItem.likes}\n        feedItemId={feedItem.id}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  feed: state.feed\n});\n\nexport default connect(mapStateToProps, null)(FeedItem);","import React from 'react';\nimport { connect } from 'react-redux';\nimport FeedItem from './FeedItem';\n\nconst Feed = ({feed}) => {\n  return (\n    <div>\n      {Object.keys(feed).map(key => {\n        const feedItem = feed[key];\n        return (\n          <FeedItem\n            key={key}\n            {...feedItem}\n          />\n        )\n      })}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  feed: state.feed\n});\n\nexport default connect(mapStateToProps, null)(Feed);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Feed from './Feed';\nimport * as classes from './Page.module.css';\n\nconst Page = (props) => {\n  return (\n    <div className={classes.Page}>\n      <h1>Redux Example</h1>\n      <div>Hello: {props.user.name}</div>\n      <Feed />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, null)(Page);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Page from './Page';\n\nconst ReduxExample = () => {\n  return (\n    <Provider store={store}>\n      <Page />\n    </Provider>\n  );\n}\n\nexport default ReduxExample;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router'\n\nimport Header from './components/Header/Header';\nimport Props from './components/PropsExample/PropsExample';\nimport Context from './components/ContextExample/ContextExample';\nimport Redux from './components/ReduxExample/ReduxExample';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path='/props' component={Props}/>\n          <Route path='/context' component={Context}/>\n          <Route path='/redux' component={Redux}/>\n          <Route component={Props}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render((\n  <HashRouter>\n    <App />\n  </HashRouter>\n), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}